name: Count Discussions

on:
  workflow_dispatch:

jobs:
  count_discussions:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: |
        npm install @octokit/graphql node-fetch@2

    - name: Count discussions
      run: |
        node -e "
        const runGraphQLQuery = async () => {
          const fetch = await import('node-fetch');  // Dynamic import for fetch
          const { graphql } = await import('@octokit/graphql');  // Dynamic import for Octokit

          const query = \`
            query($owner: String!, $repo: String!) {
              repository(owner: $owner, name: $repo) {
                discussions {
                  totalCount
                }
              }
            }\`;

          const variables = {
            owner: process.env.GITHUB_REPOSITORY.split('/')[0],
            repo: process.env.GITHUB_REPOSITORY.split('/')[1]
          };

          try {
            const result = await graphql({
              query,
              variables,
              headers: {
                authorization: \`token \${process.env.G_TOKEN}\`  // Use G_TOKEN
              },
              request: { fetch: fetch.default }  // Use the imported fetch
            });

            console.log(\`Total discussions: \${result.repository.discussions.totalCount}\`);
          } catch (error) {
            console.error('Error:', error);
          }
        };

        runGraphQLQuery();
        "
      env:
        G_TOKEN: ${{ secrets.G_TOKEN }}
